{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentDay","Date","timer","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","isOpenClock","clockName","rightClickHandler","leftClickHandler","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAAIC,MAFpB,EAKEC,MAAQ,EALV,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEN,WAAY,IAAIC,OAEhCM,QAAQC,KAAK,EAAKT,MAAMC,WAAWS,cAAcC,OAAO,IAAK,MAC5D,OAZP,gCAeE,SACEC,GAEIA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SApBpE,kCAwBE,WACER,OAAOW,cAAcZ,KAAKD,SAzB9B,oBA4BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,WAAWS,cAAcC,OAAO,IAAK,YAtC3D,GAA2BO,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACExB,MAAe,CACbyB,aAAa,EACbC,UAAW,WAHf,EAMEvB,MAAQ,EANV,EAwBEwB,kBAAoB,WAClB,EAAKpB,SAAS,CACZkB,aAAa,KA1BnB,EA8BEG,iBAAmB,WACjB,EAAKrB,SAAS,CACZkB,aAAa,KAhCnB,uDAQE,WAA2B,IAAD,OACxBI,SAASC,iBAAiB,QAAS1B,KAAKwB,kBACxCC,SAASC,iBAAiB,cAAe1B,KAAKuB,mBAE9CvB,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,QAdP,kCAiBE,WACES,SAASE,oBAAoB,QAAS3B,KAAKwB,kBAC3CC,SAASE,oBAAoB,cAAe3B,KAAKuB,mBAEjDtB,OAAOW,cAAcZ,KAAKD,SArB9B,oBAoCE,WACE,IAAQsB,EAAgBrB,KAAKJ,MAArByB,YAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOZ,KAAMT,KAAKJ,MAAM0B,mBA5ClC,GAAyBR,IAAMC,WCZ/Ba,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d1d452b4.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  currentDay: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentDay: new Date(),\n  };\n\n  timer = 0;\n\n  componentDidMount(): void {\n    this.timer = window.setInterval(() => {\n      this.setState({ currentDay: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentDay.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n  ): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.currentDay.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  isOpenClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    isOpenClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timer = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('click', this.leftClickHandler);\n    document.addEventListener('contextmenu', this.rightClickHandler);\n\n    this.timer = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.leftClickHandler);\n    document.removeEventListener('contextmenu', this.rightClickHandler);\n\n    window.clearInterval(this.timer);\n  }\n\n  rightClickHandler = () => {\n    this.setState({\n      isOpenClock: false,\n    });\n  };\n\n  leftClickHandler = () => {\n    this.setState({\n      isOpenClock: true,\n    });\n  };\n\n  render() {\n    const { isOpenClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isOpenClock && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}